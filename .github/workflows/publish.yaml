name: Publish release

on:
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn
      - run: yarn lint
      - run: yarn build
  build:
    name: Run docker build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run docker build
        run: make docker-build
  publish:
    name: Publish docker image to Google Container Registry
    runs-on: ubuntu-latest
    steps:
      - name: Get the version
        id: vars
        run: echo ::set-output name=tag::$(echo ${GITHUB_REF#refs/tags/})
      - uses: actions/checkout@v2
      - name: Run docker build
        run: make docker-build HTTP_ENDPOINT_ARG=${{ secrets.HTTP_ENDPOINT_PROD }} WS_ENDPOINT_ARG=${{ secrets.WS_ENDPOINT_PROD }}
      - run: docker tag nodle-frontend gcr.io/${{ secrets.GCP_PROJECT_ID_PROD }}/frontend:${{steps.vars.outputs.tag}}
      - name: Login to GCP
        uses: google-github-actions/setup-gcloud@v0
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID_PROD }}
          service_account_key: ${{ secrets.GCP_CREDENTIALS_PROD }}
          export_default_credentials: true
      - name: Configure Docker
        run: gcloud auth configure-docker --quiet
      - name: Push Docker image
        run: docker push gcr.io/${{ secrets.GCP_PROJECT_ID_PROD }}/frontend:${{steps.vars.outputs.tag}}
